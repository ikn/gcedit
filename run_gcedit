#! /usr/bin/env python

# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.

# BNR: http://hitmen.c02.at/files/yagcd/yagcd/chap14.html#sec14.1
# RARC: http://hitmen.c02.at/files/yagcd/yagcd/chap15.html#sec15.3
# Yaz0: http://hitmen.c02.at/files/yagcd/yagcd/chap16.html#sec16.2
# BTI: http://www.amnoid.de/gc/bti.txt

import sys
from distutils import sysconfig

_LIB_PREFIX = '/usr/local'
sys.path.append(sysconfig.get_python_lib(prefix = _LIB_PREFIX))

# non-lowercase modules = evil
from gi.repository import Gtk as gtk, Gdk as gdk, GObject as gobject
from gcedit import conf
from gcedit import loader

# add icons under current dir to icon search path
gtk.IconTheme.get_default().append_search_path('icons')
gtk.Window.set_default_icon_name(conf.IDENTIFIER)

fn_hist = conf.read_lines('disk_history')
if __name__ == '__main__':
    try:
        # use the first argument as a filename to load, if given
        fn = sys.argv[1]
    except IndexError:
        # ask for a disk image
        if fn_hist:
            loader.LoadDisk(fn_hist).show()
        else:
            if not loader.browse(fn_hist):
                sys.exit()
    else:
        # try to load given file
        if loader.run_editor(fn):
            loader.add_to_hist(fn, fn_hist)
        else:
            # failed: fall back to loader
            loader.LoadDisk(fn_hist).show()
    # start GTK main loop
    gobject.threads_init()
    gdk.threads_init()
    gdk.threads_enter()
    gtk.main()
    gdk.threads_leave()